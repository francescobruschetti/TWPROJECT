@model  TWPROJECT_MVC.Models.Data
@{
    Layout = null;
}

<!DOCTYPE HTML>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=9; IE=8; IE=7; IE=EDGE" />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>Teamwork</title>

    <link href="~/platform.css" rel="stylesheet" type="text/css" />

    <link href="~/scripts/libs/jquery/dateField/jquery.dateField.css" rel="stylesheet" type="text/css" />

    <link href="~/gantt.css" rel="stylesheet" type="text/css" />

    <link href="~/ganttPrint.css" rel="stylesheet" type="text/css" media="print" />

    <script src="http://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>

    <!-- load fontawesome icons library -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <script src="~/scripts/libs/jquery.livequery.1.1.1.min.js"></script>

    <script src="~/scripts/libs/jquery/jquery.timers.js"></script>

    <script src="~/scripts/libs/utilities.js"></script>

    <script src="~/scripts/libs/forms.js"></script>

    <script src="~/scripts/libs/date.js"></script>

    <script src="~/scripts/libs/dialogs.js"></script>

    <script src="~/scripts/libs/layout.js"></script>


    <script src="~/scripts/libs/i18nJs.js"></script>

    <script src="~/scripts/libs/jquery/dateField/jquery.dateField.js"></script>

    <script src="~/scripts/libs/jquery/JST/jquery.JST.js"></script>

    <script type="text/javascript" src="~/scripts/libs/jquery/svg/jquery.svg.min.js"></script>

    <script type="text/javascript" src="~/scripts/libs/jquery/svg/jquery.svgdom.1.8.js"></script>

    <script src="~/ganttUtilities.js"></script>

    <script src="~/ganttTask.js"></script>
    <script src="~/ganttDrawerSVG.js"></script>
    <script src="~/ganttZoom.js"></script>
    <script src="~/ganttGridEditor.js"></script>
    <script src="~/ganttMaster.js"></script>


    <!--<script src="~/libs/profiling.js"></script>-->
    <!--<script type="text/javascript" src="~/ganttTestSuite.js"></script>-->
</head>
<body style="background-color: #fff;">



    <div id="workSpace" style="padding:0px; overflow-y:auto; overflow-x:hidden;border:1px solid #e5e5e5;position:relative;margin:0 5px"></div>

    <style>
        .resEdit {
            padding: 15px;
        }

        .resLine {
            width: 95%;
            padding: 3px;
            margin: 5px;
            border: 1px solid #d0d0d0;
        }

        body {
            overflow: hidden;
        }

        .ganttButtonBar h1 {
            color: #000000;
            font-weight: bold;
            font-size: 28px;
            margin-left: 10px;
        }
    </style>

    <form id="gimmeBack" style="display:none;" action="../gimmeBack.jsp" method="post" target="_blank"><input type="hidden" name="prj" id="gimBaPrj"></form>

    <script type="text/javascript">

        var ge;
        $(function () {

            // here starts gantt initialization
            ge = new GanttMaster();
            ge.set100OnClose = true; //

            ge.shrinkParent = true;

            ge.init($("#workSpace"));
        
            loadI18n(); //overwrite with localized ones

            //in order to force compute the best-fitting zoom level
            delete ge.gantt.zoom;

            var project = loadFromLocalStorage();

            if (!project.canWrite)
                $(".ganttButtonBar button.requireWrite").attr("disabled", "true");

            ge.loadProject(project);
            ge.checkpoint(); //empty the undo stack
        });



        function getDemoProjectBackUp() {
            /*console.debug("Lettura dati DEMO");
            ret = {
                "tasks": [
                { "id": -1, "name": "Gantt editor #1", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 0, "status": "STATUS_ACTIVE", "depends": "", "canWrite": true, "start": 1396994400000, "duration": 20, "end": 1399586399999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": true },
                { "id": -2, "name": "coding", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 1, "status": "STATUS_ACTIVE", "depends": "", "canWrite": true, "start": 1396994400000, "duration": 10, "end": 1398203999999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": true },
                { "id": -3, "name": "gantt part", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 2, "status": "STATUS_ACTIVE", "depends": "", "canWrite": true, "start": 1396994400000, "duration": 2, "end": 1397167199999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": false },
                { "id": -4, "name": "editor part", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 2, "status": "STATUS_SUSPENDED", "depends": "3", "canWrite": true, "start": 1397167200000, "duration": 4, "end": 1397685599999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": false },
                { "id": -5, "name": "testing", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 1, "status": "STATUS_SUSPENDED", "depends": "2:5", "canWrite": true, "start": 1398981600000, "duration": 5, "end": 1399586399999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": true },
                { "id": -6, "name": "test on safari", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 2, "status": "STATUS_SUSPENDED", "depends": "", "canWrite": true, "start": 1398981600000, "duration": 2, "end": 1399327199999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": false },
                { "id": -7, "name": "test on ie", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 2, "status": "STATUS_SUSPENDED", "depends": "6", "canWrite": true, "start": 1399327200000, "duration": 3, "end": 1399586399999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": false },
                { "id": -8, "name": "test on chrome", "progress": 0, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 2, "status": "STATUS_SUSPENDED", "depends": "6", "canWrite": true, "start": 1399327200000, "duration": 2, "end": 1399499999999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": false },
                { "id": -9, "name": "Fra Task", "progress": 50, "progressByWorklog": false, "relevance": 0, "type": "", "typeId": "", "description": "", "code": "", "level": 1, "status": "STATUS_ACTIVE", "depends": "6:2", "canWrite": true, "start": 1399327200000, "duration": 2, "end": 1399499999999, "startIsMilestone": false, "endIsMilestone": false, "collapsed": false, "assigs": [], "hasChild": false }

                ], "selectedRow": 2, "deletedTaskIds": [],
                "resources": [
                { "id": "tmp_1", "name": "Resource 1" },
                { "id": "tmp_2", "name": "Resource 2" },
                { "id": "tmp_3", "name": "Resource 3" },
                { "id": "tmp_4", "name": "Resource 4" }
                ],
                "roles": [
                { "id": "tmp_1", "name": "Project Manager" },
                { "id": "tmp_2", "name": "Worker" },
                { "id": "tmp_3", "name": "Stakeholder" },
                { "id": "tmp_4", "name": "Customer" }
                ], "canWrite": false, "canDelete": false, "canWriteOnParent": false, "canAdd": false
            }


            //actualize data
            var offset = new Date().getTime() - ret.tasks[0].start;
            for (var i = 0; i < ret.tasks.length; i++) {
                ret.tasks[i].start = ret.tasks[i].start + offset;
            }
            return ret;*/
        }

        function getDemoProjectFunzionante() {
            console.debug("Lettura dati DEMO");
            ret = {
                "tasks": @Html.Raw(Json.Encode(Model.tasks)),
                "selectedRow": 2, "deletedTaskIds": [],
                "resources": @Html.Raw(Json.Encode(Model.resources)),
                "roles": @Html.Raw(Json.Encode(Model.roles)),
                "canWrite": false, "canDelete": false, "canWriteOnParent": false, "canAdd": false
            }

            //actualize data
            var offset = new Date().getTime() - ret.tasks[0].start;
            for (var i = 0; i < ret.tasks.length; i++) {
                ret.tasks[i].start = ret.tasks[i].start + offset;
            }
            return ret;
        }

        function getDemoProject() {
            console.debug("Lettura dati DEMO");
            ret = {
                "tasks": @Html.Raw(Json.Encode(Model.tasks)),
                "selectedRow": 2, "deletedTaskIds": [],
                "resources": @Html.Raw(Json.Encode(Model.resources)),
                "roles": @Html.Raw(Json.Encode(Model.roles)),
                "canWrite": "@Model.canWrite", "canDelete": "@Model.canDelete",
                "canWriteOnParent": "@Model.canWriteOnParent", "canAdd": "@Model.canAdd"
            }

            //actualize data
            var offset = new Date().getTime() - ret.tasks[0].start;
            for (var i = 0; i < ret.tasks.length; i++) {
                ret.tasks[i].start = ret.tasks[i].start + offset;
            }

            console.log(ret);

            return ret;
        }



        function loadGanttFromServer(taskId, callback) {

            //this is a simulation: load data from the local storage if you have already played with the demo or a textarea with starting demo data
            var ret = loadFromLocalStorage();

            //this is the real implementation
            /*
            //var taskId = $("#taskSelector").val();
            var prof = new Profiler("loadServerSide");
            prof.reset();

            $.getJSON("ganttAjaxController.jsp", {CM:"LOADPROJECT",taskId:taskId}, function(response) {
              //console.debug(response);
              if (response.ok) {
                prof.stop();

                ge.loadProject(response.project);
                ge.checkpoint(); //empty the undo stack

                if (typeof(callback)=="function") {
                  callback(response);
                }
              } else {
                jsonErrorHandling(response);
              }
            });
            */

            return ret;
        }


        function saveGanttOnServer() {

            //this is a simulation: save data to the local storage or to the textarea
            saveInLocalStorage();

            /*
            var prj = ge.saveProject();

            delete prj.resources;
            delete prj.roles;

            var prof = new Profiler("saveServerSide");
            prof.reset();

            if (ge.deletedTaskIds.length>0) {
              if (!confirm("TASK_THAT_WILL_BE_REMOVED\n"+ge.deletedTaskIds.length)) {
                return;
              }
            }

            $.ajax("ganttAjaxController.jsp", {
              dataType:"json",
              data: {CM:"SVPROJECT",prj:JSON.stringify(prj)},
              type:"POST",

              success: function(response) {
                if (response.ok) {
                  prof.stop();
                  if (response.project) {
                    ge.loadProject(response.project); //must reload as "tmp_" ids are now the good ones
                  } else {
                    ge.reset();
                  }
                } else {
                  var errMsg="Errors saving project\n";
                  if (response.message) {
                    errMsg=errMsg+response.message+"\n";
                  }

                  if (response.errorMessages.length) {
                    errMsg += response.errorMessages.join("\n");
                  }

                  alert(errMsg);
                }
              }

            });
            */
        }

        function newProject() {
            clearGantt();
        }

        function clearGantt() {
            ge.reset();
        }

        //-------------------------------------------  Get project file as JSON (used for migrate project from gantt to Teamwork) ------------------------------------------------------
        function getFile() {
            $("#gimBaPrj").val(JSON.stringify(ge.saveProject()));
            $("#gimmeBack").submit();
            $("#gimBaPrj").val("");

            /*  var uriContent = "data:text/html;charset=utf-8," + encodeURIComponent(JSON.stringify(prj));
             neww=window.open(uriContent,"dl");*/
        }


        function loadFromLocalStorage() {

            //console.log("Carico i dati");
            //console.log(localStorage);

            var ret;
            /*----
            if (localStorage) {
                if (localStorage.getObject("teamworkGantDemo")) {
                    ret = localStorage.getObject("teamworkGantDemo");
                    console.log(ret);
                    console.log("----------");
                }
            }*/



            //if not found create a new example task
            if (!ret || !ret.tasks || ret.tasks.length == 0) {
                console.log("****INIZIO");
                ret = getDemoProject();
                console.log("*****FINE");
            }
            return ret;
        }

        function saveInLocalStorage() {

            console.log("Salvo i dati");
            var prj = ge.saveProject();

            // Funzione che salva effetttivamente i dati
            if (localStorage) {
                // localStorage è simile hai cookie. Permette di salvare dati in locale sul browser.
                // la differenza rispetto ai cookie è che non viene salvato niente lato client.
                // Inotre, il localStorage NON scade. I dati restano salvati finche non si cancellano manualmente.
                localStorage.setObject("teamworkGantDemo", prj);
            }
        }


        //-------------------------------------------  Open a black popup for managing resources. This is only an axample of implementation (usually resources come from server) ------------------------------------------------------
        function editResources() {

            //make resource editor
            var resourceEditor = $.JST.createFromTemplate({}, "RESOURCE_EDITOR");
            var resTbl = resourceEditor.find("#resourcesTable");

            for (var i = 0; i < ge.resources.length; i++) {
                var res = ge.resources[i];
                resTbl.append($.JST.createFromTemplate(res, "RESOURCE_ROW"))
            }


            //bind add resource
            resourceEditor.find("#addResource").click(function () {
                resTbl.append($.JST.createFromTemplate({ id: "new", name: "resource" }, "RESOURCE_ROW"))
            });

            //bind save event
            resourceEditor.find("#resSaveButton").click(function () {
                var newRes = [];
                //find for deleted res
                for (var i = 0; i < ge.resources.length; i++) {
                    var res = ge.resources[i];
                    var row = resourceEditor.find("[resId=" + res.id + "]");
                    if (row.length > 0) {
                        //if still there save it
                        var name = row.find("input[name]").val();
                        if (name && name != "")
                            res.name = name;
                        newRes.push(res);
                    } else {
                        //remove assignments
                        for (var j = 0; j < ge.tasks.length; j++) {
                            var task = ge.tasks[j];
                            var newAss = [];
                            for (var k = 0; k < task.assigs.length; k++) {
                                var ass = task.assigs[k];
                                if (ass.resourceId != res.id)
                                    newAss.push(ass);
                            }
                            task.assigs = newAss;
                        }
                    }
                }

                //loop on new rows
                var cnt = 0
                resourceEditor.find("[resId=new]").each(function () {
                    cnt++;
                    var row = $(this);
                    var name = row.find("input[name]").val();
                    if (name && name != "")
                        newRes.push(new Resource("tmp_" + new Date().getTime() + "_" + cnt, name));
                });

                ge.resources = newRes;

                closeBlackPopup();
                ge.redraw();
            });


            var ndo = createModalPopup(400, 500).append(resourceEditor);
        }

        function initializeHistoryManagement() {

            //si chiede al server se c'è della hisory per la root
            $.getJSON(contextPath + "/applications/teamwork/task/taskAjaxController.jsp", { CM: "GETGANTTHISTPOINTS", OBJID: 10236 }, function (response) {

                //se c'è
                if (response.ok == true && response.historyPoints && response.historyPoints.length > 0) {

                    //si crea il bottone sulla bottoniera
                    var histBtn = $("<button>").addClass("button textual icon lreq30 lreqLabel").attr("title", "SHOW_HISTORY").append("<span class=\"teamworkIcon\">&#x60;</span>");

                    //al click
                    histBtn.click(function () {
                        var el = $(this);
                        var ganttButtons = $(".ganttButtonBar .buttons");

                        //è gi�  in modalit�  history?
                        if (!ge.element.is(".historyOn")) {
                            ge.element.addClass("historyOn");
                            ganttButtons.find(".requireCanWrite").hide();

                            //si carica la history server side
                            if (false) return;
                            showSavingMessage();
                            $.getJSON(contextPath + "/applications/teamwork/task/taskAjaxController.jsp", { CM: "GETGANTTHISTPOINTS", OBJID: ge.tasks[0].id }, function (response) {
                                jsonResponseHandling(response);
                                hideSavingMessage();
                                if (response.ok == true) {
                                    var dh = response.historyPoints;
                                    //ge.historyPoints=response.historyPoints;
                                    if (dh && dh.length > 0) {
                                        //si crea il div per lo slider
                                        var sliderDiv = $("<div>").prop("id", "slider").addClass("lreq30 lreqHide").css({ "display": "inline-block", "width": "500px" });
                                        ganttButtons.append(sliderDiv);

                                        var minVal = 0;
                                        var maxVal = dh.length - 1;

                                        $("#slider").show().mbSlider({
                                            rangeColor: '#2f97c6',
                                            minVal: minVal,
                                            maxVal: maxVal,
                                            startAt: maxVal,
                                            showVal: false,
                                            grid: 1,
                                            formatValue: function (val) {
                                                return new Date(dh[val]).format();
                                            },
                                            onSlideLoad: function (obj) {
                                                this.onStop(obj);

                                            },
                                            onStart: function (obj) { },
                                            onStop: function (obj) {
                                                var val = $(obj).mbgetVal();
                                                showSavingMessage();
                                                $.getJSON(contextPath + "/applications/teamwork/task/taskAjaxController.jsp", { CM: "GETGANTTHISTORYAT", OBJID: ge.tasks[0].id, millis: dh[val] }, function (response) {
                                                    jsonResponseHandling(response);
                                                    hideSavingMessage();
                                                    if (response.ok) {
                                                        ge.baselines = response.baselines;
                                                        ge.showBaselines = true;
                                                        ge.baselineMillis = dh[val];
                                                        ge.redraw();
                                                    }
                                                })

                                            },
                                            onSlide: function (obj) {
                                                clearTimeout(obj.renderHistory);
                                                var self = this;
                                                obj.renderHistory = setTimeout(function () {
                                                    self.onStop(obj);
                                                }, 200)

                                            }
                                        });
                                    }
                                }
                            });


                            // quando si spenge
                        } else {
                            //si cancella lo slider
                            $("#slider").remove();
                            ge.element.removeClass("historyOn");
                            if (ge.permissions.canWrite)
                                ganttButtons.find(".requireCanWrite").show();

                            ge.showBaselines = false;
                            ge.baselineMillis = undefined;
                            ge.redraw();
                        }

                    });
                    $("#saveGanttButton").before(histBtn);
                }
            })
        }

        function showBaselineInfo(event, element) {
            //alert(element.attr("data-label"));
            $(element).showBalloon(event, $(element).attr("data-label"));
            ge.splitter.secondBox.one("scroll", function () {
                $(element).hideBalloon();
            })
        }

    </script>





    <div id="gantEditorTemplates" style="display:none;">
        <div class="__template__" type="GANTBUTTONS">
            <!--
                        <div class="ganttButtonBar noprint">
                          <div class="buttons">
                            <a href="https://gantt.twproject.com/"><img src="/scripts/res/twGanttLogo.png" alt="Twproject" align="absmiddle" style="max-width: 136px; padding-right: "></a>

                            <button onclick="$('#workSpace').trigger('undo.gantt');return false;" class="button textual icon requireCanWrite" title="undo"><span class="teamworkIcon"><i class="fa fa-undo" aria-hidden="true"></i></button>
                            <button onclick="$('#workSpace').trigger('redo.gantt');return false;" class="button textual icon requireCanWrite" title="redo"><span class="teamworkIcon"><i class="fa fa-repeat" aria-hidden="true"></i></button>
                            <span class="ganttButtonSeparator requireCanWrite requireCanAdd"></span>
                            <button onclick="$('#workSpace').trigger('addAboveCurrentTask.gantt');return false;" class="button textual icon requireCanWrite requireCanAdd" title="Inserisci un'attività sopra quella selezionata"><span class="teamworkIcon">Inserisci sopra</span></button>
                            <button onclick="$('#workSpace').trigger('addBelowCurrentTask.gantt');return false;" class="button textual icon requireCanWrite requireCanAdd" title="Inserisci un'attività sotto quella selezionata"><span class="teamworkIcon">Inserisci sotto</span></button>
                            <span class="ganttButtonSeparator requireCanWrite requireCanInOutdent"></span>
                            <button onclick="$('#workSpace').trigger('outdentCurrentTask.gantt');return false;" class="button textual icon requireCanWrite requireCanInOutdent" title="un-indent task"><span class="teamworkIcon"><i class="fa fa-arrow-left" aria-hidden="true"></i></span></button>
                            <button onclick="$('#workSpace').trigger('indentCurrentTask.gantt');return false;" class="button textual icon requireCanWrite requireCanInOutdent" title="indent task"><span class="teamworkIcon"><i class="fa fa-arrow-right" aria-hidden="true"></i></span></button>
                            <span class="ganttButtonSeparator requireCanWrite requireCanMoveUpDown"></span>
                            <button onclick="$('#workSpace').trigger('moveUpCurrentTask.gantt');return false;" class="button textual icon requireCanWrite requireCanMoveUpDown" title="move up"><span class="teamworkIcon"><i class="fa fa-arrow-up" aria-hidden="true"></i></span></button>
                            <button onclick="$('#workSpace').trigger('moveDownCurrentTask.gantt');return false;" class="button textual icon requireCanWrite requireCanMoveUpDown" title="move down"><span class="teamworkIcon"><i class="fa fa-arrow-down" aria-hidden="true"></i></span></button>
                            <span class="ganttButtonSeparator requireCanWrite requireCanDelete"></span>
                            <button onclick="$('#workSpace').trigger('deleteFocused.gantt');return false;" class="button textual icon delete requireCanWrite" title="Elimina"><span class="teamworkIcon"><i class="fa fa-trash" aria-hidden="true"></i></span></button>
                            <span class="ganttButtonSeparator"></span>
                            @*
                                <button onclick="$('#workSpace').trigger('expandAll.gantt');return false;" class="button textual icon " title="EXPAND_ALL"><span class="teamworkIcon"><i class="fa fa-expand" aria-hidden="true"></i></span></button>
                                <button onclick="$('#workSpace').trigger('collapseAll.gantt'); return false;" class="button textual icon " title="COLLAPSE_ALL"><span class="teamworkIcon"><i class="fa fa-collapse" aria-hidden="true"></i></span></button>
                                <span class="ganttButtonSeparator"></span>
                            *@

                            <button onclick="$('#workSpace').trigger('zoomMinus.gantt'); return false;" class="button textual icon " title="zoom out"><span class="teamworkIcon"><i class="fa fa-search-plus" aria-hidden="true"></i></span></button>
                            <button onclick="$('#workSpace').trigger('zoomPlus.gantt');return false;" class="button textual icon " title="zoom in"><span class="teamworkIcon"><i class="fa fa-search-minus" aria-hidden="true"></i></span></button>
                          <span class="ganttButtonSeparator"></span>
                            <button onclick="$('#workSpace').trigger('print.gantt');return false;" class="button textual icon " title="Stampa"><span class="teamworkIcon"><i class="fa fa-print" aria-hidden="true"></i></span></button>
                          <span class="ganttButtonSeparator"></span>
                            <button onclick="ge.gantt.showCriticalPath=!ge.gantt.showCriticalPath; ge.redraw();return false;" class="button textual icon requireCanSeeCriticalPath" title="Visualizza percorso critico"><span class="teamworkIcon"><i class="fa fa-random" aria-hidden="true"></i></span></button>
                          <span class="ganttButtonSeparator requireCanSeeCriticalPath"></span>
                            <button onclick="ge.splitter.resize(.1);return false;" class="button textual icon" title="Visualizza solo dati"><span class="teamworkIcon"><i class="fa fa-desktop" aria-hidden="true">1</i></span></button>
                            <button onclick="ge.splitter.resize(50);return false;" class="button textual icon" title="Visualizza dati e gantt"><span class="teamworkIcon"><i class="fa fa-desktop" aria-hidden="true">2</i></span></button>
                            <button onclick="ge.splitter.resize(100);return false;" class="button textual icon" title="Visualizza solo gantt"><span class="teamworkIcon"><i class="fa fa-desktop" aria-hidden="true">3</i></span></button>
                            <span class="ganttButtonSeparator"></span>
                           @*<button onclick="$('#workSpace').trigger('fullScreen.gantt');return false;" class="button textual icon" title="A tutto schermo" id="fullscrbtn"><span class="teamworkIcon"><i class="fa fa-arrows-alt" aria-hidden="true"></i></span></button>*@


                          <button onclick="editResources();" class="button textual requireWrite" title="Modifica risorse"><span class="teamworkIcon"><i class="fa fa-edit" aria-hidden="true"></i></span></button>
                            &nbsp; &nbsp; &nbsp; &nbsp;
                          <button onclick="saveGanttOnServer();" class="button first big requireWrite" title="Salva">Salva</button>
                          <button onclick='newProject();' class='button requireWrite newproject'><em>Elimina progetto</em></button>
                          <button class="button login" title="login/enroll" onclick="loginEnroll($(this));" style="display:none;">login/enroll</button>
                          <button class="button opt collab" title="Start with Twproject" onclick="collaborate($(this));" style="display:none;"><em>collaborate</em></button>
                          </div></div>
                        -->
        </div>

        <div class="__template__" type="TASKSEDITHEAD">
            <!--
            <table class="gdfTable" cellspacing="0" cellpadding="0">
              <thead>
              <tr style="height:40px">
                <th class="gdfColHeader" style="width:35px; border-right: none"></th>
                <th class="gdfColHeader" style="width:25px;"></th>
                <th class="gdfColHeader gdfResizable" style="width:100px;">@Resources.GanttLanguage.Codice</th>
                <th class="gdfColHeader gdfResizable" style="width:300px;">@Resources.GanttLanguage.Nome</th>
                <th class="gdfColHeader"  align="center" style="width:17px;" title="@Resources.GanttLanguage.InizioMilestone"><span class="teamworkIcon" style="font-size: 8px;"><i class="fa fa-exclamation" aria-hidden="true"></i></span></th>
                <th class="gdfColHeader gdfResizable" style="width:80px;">@Resources.GanttLanguage.Inizio</th>
                <th class="gdfColHeader"  align="center" style="width:17px;" title="@Resources.GanttLanguage.FineMilestone"><span class="teamworkIcon" style="font-size: 8px;"><i class="fa fa-exclamation" aria-hidden="true"></i></span></th>
                <th class="gdfColHeader gdfResizable" style="width:80px;">@Resources.GanttLanguage.Fine</th>
                <th class="gdfColHeader gdfResizable" style="width:50px;">@Resources.GanttLanguage.Durata</th>
                <th class="gdfColHeader gdfResizable" style="width:20px;">@Resources.GanttLanguage.Progressi</th>
                <th class="gdfColHeader gdfResizable requireCanSeeDep" style="width:50px;">@Resources.GanttLanguage.Relazioni</th>
                <th class="gdfColHeader gdfResizable" style="width:1000px; text-align: left; padding-left: 10px;">@Resources.GanttLanguage.Risorse</th>
              </tr>
              </thead>
            </table>
            -->
        </div>

        <div class="__template__" type="TASKROW">
            <!--
            <tr id="tid_(#=obj.id#)" taskId="(#=obj.id#)" class="taskEditRow (#=obj.isParent()?'isParent':''#) (#=obj.collapsed?'collapsed':''#)" level="(#=level#)">
              <th class="gdfCell edit" align="right" style="cursor:pointer;"><span class="taskRowIndex">(#=obj.getRow()+1#)</span> <span class="teamworkIcon" style="font-size:12px;" ><i class="fa fa-pencil" aria-hidden="true"></i></span></th>
              <td class="gdfCell noClip" align="center"><div class="taskStatus cvcColorSquare" status="(#=obj.status#)"></div></td>
              <td class="gdfCell"><input type="text" name="code" value="(#=obj.code?obj.code:''#)" placeholder="@Resources.GanttLanguage.Codice"></td>
              <td class="gdfCell indentCell" style="padding-left:(#=obj.level*10+18#)px;">
                <div class="exp-controller" align="center"></div>
                <input type="text" name="name" value="(#=obj.name#)" placeholder="@Resources.GanttLanguage.Nome">
              </td>
              <td class="gdfCell" align="center"><input type="checkbox" name="startIsMilestone"></td>
              <td class="gdfCell"><input type="text" name="start"  value="" class="date"></td>
              <td class="gdfCell" align="center"><input type="checkbox" name="endIsMilestone"></td>
              <td class="gdfCell"><input type="text" name="end" value="" class="date"></td>
              <td class="gdfCell"><input type="text" name="duration" autocomplete="off" value="(#=obj.duration#)"></td>
              <td class="gdfCell"><input type="text" name="progress" class="validated" entrytype="PERCENTILE" autocomplete="off" value="(#=obj.progress?obj.progress:''#)" (#=obj.progressByWorklog?"readOnly":""#)></td>
              <td class="gdfCell requireCanSeeDep"><input type="text" name="depends" autocomplete="off" value="(#=obj.depends#)" (#=obj.hasExternalDep?"readonly":""#)></td>
              <td class="gdfCell taskAssigs">(#=obj.getAssigsString()#)</td>
            </tr>
            -->
        </div>

        <div class="__template__" type="TASKEMPTYROW">
            <!--
            <tr class="taskEditRow emptyRow" >
              <th class="gdfCell" align="right"></th>
              <td class="gdfCell noClip" align="center"></td>
              <td class="gdfCell"></td>
              <td class="gdfCell"></td>
              <td class="gdfCell"></td>
              <td class="gdfCell"></td>
              <td class="gdfCell"></td>
              <td class="gdfCell"></td>
              <td class="gdfCell"></td>
              <td class="gdfCell"></td>
              <td class="gdfCell requireCanSeeDep"></td>
              <td class="gdfCell"></td>
            </tr>
            -->
        </div>

        <div class="__template__" type="TASKBAR">
            <!--
            <div class="taskBox taskBoxDiv" taskId="(#=obj.id#)" >
              <div class="layout (#=obj.hasExternalDep?'extDep':''#)">
                <div class="taskStatus" status="(#=obj.status#)"></div>
                <div class="taskProgress" style="width:(#=obj.progress>100?100:obj.progress#)%; background-color:(#=obj.progress>100?'red':'rgb(153,255,51);'#);"></div>
                <div class="milestone (#=obj.startIsMilestone?'active':''#)" ></div>

                <div class="taskLabel"></div>
                <div class="milestone end (#=obj.endIsMilestone?'active':''#)" ></div>
              </div>
            </div>
            -->
        </div>


        <div class="__template__" type="CHANGE_STATUS">
            <!--
              <div class="taskStatusBox">
              <div class="taskStatus cvcColorSquare" status="STATUS_ACTIVE" title="@Resources.GanttLanguage.Attivo"></div>
              <div class="taskStatus cvcColorSquare" status="STATUS_DONE" title="@Resources.GanttLanguage.Completato"></div>
              <div class="taskStatus cvcColorSquare" status="STATUS_FAILED" title="@Resources.GanttLanguage.Fallito"></div>
              <div class="taskStatus cvcColorSquare" status="STATUS_SUSPENDED" title="@Resources.GanttLanguage.Sospeso"></div>
              <div class="taskStatus cvcColorSquare" status="STATUS_WAITING" title="@Resources.GanttLanguage.InAttesa" style="display: none;"></div>
              <div class="taskStatus cvcColorSquare" status="STATUS_UNDEFINED" title="@Resources.GanttLanguage.NonDefinito"></div>
              </div>
            -->
        </div>




        <div class="__template__" type="TASK_EDITOR">
            <!--
            <div class="ganttTaskEditor">
              <h2 class="taskData">@Resources.GanttLanguage.TitoloModificaAttivita</h2>
              <table  cellspacing="1" cellpadding="5" width="100%" class="taskData table" border="0">
                    <tr>
                  <td width="200" style="height: 80px"  valign="top">
                    <label for="code">@Resources.GanttLanguage.CodiceAttivita</label><br>
                    <input type="text" name="code" id="code" value="" size=15 class="formElements" autocomplete='off' maxlength=255 style='width:100%' oldvalue="1">
                  </td>
                  <td colspan="3" valign="top"><label for="name" class="required">@Resources.GanttLanguage.Nome</label><br><input type="text" name="name" id="name"class="formElements" autocomplete='off' maxlength=255 style='width:100%' value="" required="true" oldvalue="1"></td>
                    </tr>


                <tr class="dateRow">
                  <td nowrap="">
                    <div style="position:relative">
                      <label for="start">@Resources.GanttLanguage.Inizio</label>&nbsp;&nbsp;&nbsp;&nbsp;
                      <input type="checkbox" id="startIsMilestone" name="startIsMilestone" value="yes"> &nbsp;<label for="startIsMilestone">@Resources.GanttLanguage.Milestone</label>&nbsp;
                      <br><input type="text" name="start" id="start" size="8" class="formElements dateField validated date" autocomplete="off" maxlength="255" value="" oldvalue="1" entrytype="DATE">
                      <span title="@Resources.GanttLanguage.Calendario" id="starts_inputDate" class="teamworkIcon openCalendar" onclick="$(this).dateField({inputField:$(this).prevAll(':input:first'),isSearchField:false});"><i class="fa fa-calendar" aria-hidden="true"></i></span>          </div>
                  </td>
                  <td nowrap="">
                    <label for="end">Fine</label>&nbsp;&nbsp;&nbsp;&nbsp;
                    <input type="checkbox" id="endIsMilestone" name="endIsMilestone" value="yes"> &nbsp;<label for="endIsMilestone">@Resources.GanttLanguage.Milestone</label>&nbsp;
                    <br><input type="text" name="end" id="end" size="8" class="formElements dateField validated date" autocomplete="off" maxlength="255" value="" oldvalue="1" entrytype="DATE">
                    <span title="@Resources.GanttLanguage.Calendario" id="ends_inputDate" class="teamworkIcon openCalendar" onclick="$(this).dateField({inputField:$(this).prevAll(':input:first'),isSearchField:false});"><i class="fa fa-calendar" aria-hidden="true"></i></span>
                  </td>
                  <td nowrap="" >
                    <label for="duration" class=" ">@Resources.GanttLanguage.Giorni</label><br>
                    <input type="text" name="duration" id="duration" size="4" class="formElements validated durationdays" title="@Resources.GanttLanguage.DurataInGiorni" autocomplete="off" maxlength="255" value="" oldvalue="1" entrytype="DURATIONDAYS">&nbsp;
                  </td>
                </tr>

                <tr>
                  <td  colspan="2">
                    <label for="status" class=" ">@Resources.GanttLanguage.Stato</label><br>
                    <select id="status" name="status" class="taskStatus" status="(#=obj.status#)"  onchange="$(this).attr('STATUS',$(this).val());">
                      <option value="STATUS_ACTIVE" class="taskStatus" status="STATUS_ACTIVE" >@Resources.GanttLanguage.Attivo</option>
                      <option value="STATUS_WAITING" class="taskStatus" status="STATUS_WAITING" >@Resources.GanttLanguage.InAttesa</option>
                      <option value="STATUS_SUSPENDED" class="taskStatus" status="STATUS_SUSPENDED" >@Resources.GanttLanguage.Sospeso</option>
                      <option value="STATUS_DONE" class="taskStatus" status="STATUS_DONE" >@Resources.GanttLanguage.Completato</option>
                      <option value="STATUS_FAILED" class="taskStatus" status="STATUS_FAILED" >@Resources.GanttLanguage.Fallito</option>
                      <option value="STATUS_UNDEFINED" class="taskStatus" status="STATUS_UNDEFINED" >@Resources.GanttLanguage.NonDefinito</option>
                    </select>
                  </td>

                  <td valign="top" nowrap>
                    <label>@Resources.GanttLanguage.Progresso</label><br>
                    <input type="text" name="progress" id="progress" size="7" class="formElements validated percentile" autocomplete="off" maxlength="255" value="" oldvalue="1" entrytype="PERCENTILE">
                  </td>
                </tr>

                    </tr>
                    <tr>
                      <td colspan="4">
                        <label for="description">@Resources.GanttLanguage.DescrizioneAttivita</label><br>
                        <textarea rows="3" cols="30" id="description" name="description" class="formElements" style="width:100%"></textarea>
                      </td>
                    </tr>
                  </table>

              <h2>@Resources.GanttLanguage.RisorsaAssociata</h2>
            <table  cellspacing="1" cellpadding="0" width="100%" id="assigsTable">
              <tr>
                <th style="width:100px;">@Resources.GanttLanguage.Nome</th>
                <th style="width:70px;">@Resources.GanttLanguage.Ruolo</th>
                <th style="width:30px;">est.wklg.</th>
                <th style="width:30px;" id="addAssig"><span class="teamworkIcon" style="cursor: pointer"><i class="fa fa-plus" aria-hidden="true"></i></span></th>
              </tr>
            </table>

            <div style="text-align: right; padding-top: 20px">
              <span id="saveButton" class="button first" onClick="$(this).trigger('saveFullEditor.gantt');">@Resources.GanttLanguage.Salva</span>
            </div>

            </div>
            -->
        </div>



        <div class="__template__" type="ASSIGNMENT_ROW">
            <!--
            <tr taskId="(#=obj.task.id#)" assId="(#=obj.assig.id#)" class="assigEditRow" >
              <td ><select name="resourceId"  class="formElements" (#=obj.assig.id.indexOf("tmp_")==0?"":"disabled"#) ></select></td>
              <td ><select type="select" name="roleId"  class="formElements"></select></td>
              <td ><input type="text" name="effort" value="(#=getMillisInHoursMinutes(obj.assig.effort)#)" size="5" class="formElements"></td>
              <td align="center"><span class="teamworkIcon delAssig del" style="cursor: pointer"><i class="fa fa-minus" aria-hidden="true"></i></span></td>
            </tr>
            -->
        </div>



        <div class="__template__" type="RESOURCE_EDITOR">
            <!--
            <div class="resourceEditor" style="padding: 5px;">

              <h2>@Resources.GanttLanguage.TitoloModificaRisorse</h2>
              <table  cellspacing="1" cellpadding="0" width="100%" id="resourcesTable">
                <tr>
                  <th style="width:100px;">@Resources.GanttLanguage.Nome</th>
                  <th style="width:30px;" id="addResource"><span class="teamworkIcon" style="cursor: pointer"><i class="fa fa-plus" aria-hidden="true"></i></span></th>
                </tr>
              </table>

              <div style="text-align: right; padding-top: 20px"><button id="resSaveButton" class="button big">@Resources.GanttLanguage.Salva</button></div>
            </div>
            -->
        </div>



        <div class="__template__" type="RESOURCE_ROW">
            <!--
            <tr resId="(#=obj.id#)" class="resRow" >
              <td ><input type="text" name="name" value="(#=obj.name#)" style="width:100%;" class="formElements"></td>
              <td align="center"><span class="teamworkIcon delRes del" style="cursor: pointer"><i class="fa fa-minus" aria-hidden="true"></i></span></td>
            </tr>
            -->
        </div>


    </div>
    <script type="text/javascript">
        $.JST.loadDecorator("RESOURCE_ROW", function (resTr, res) {
            resTr.find(".delRes").click(function () { $(this).closest("tr").remove() });
        });

        $.JST.loadDecorator("ASSIGNMENT_ROW", function (assigTr, taskAssig) {
            var resEl = assigTr.find("[name=resourceId]");
            var opt = $("<option>");
            resEl.append(opt);
            for (var i = 0; i < taskAssig.task.master.resources.length; i++) {
                var res = taskAssig.task.master.resources[i];
                opt = $("<option>");
                opt.val(res.id).html(res.name);
                if (taskAssig.assig.resourceId == res.id)
                    opt.attr("selected", "true");
                resEl.append(opt);
            }
            var roleEl = assigTr.find("[name=roleId]");
            for (var i = 0; i < taskAssig.task.master.roles.length; i++) {
                var role = taskAssig.task.master.roles[i];
                var optr = $("<option>");
                optr.val(role.id).html(role.name);
                if (taskAssig.assig.roleId == role.id)
                    optr.attr("selected", "true");
                roleEl.append(optr);
            }

            if (taskAssig.task.master.permissions.canWrite && taskAssig.task.canWrite) {
                assigTr.find(".delAssig").click(function () {
                    var tr = $(this).closest("[assId]").fadeOut(200, function () { $(this).remove() });
                });
            }

        });


        function loadI18n() {
            GanttMaster.messages = {
                "CANNOT_WRITE": "@Resources.GanttLanguage.CANNOT_WRITE",
                "CHANGE_OUT_OF_SCOPE": "@Resources.GanttLanguage.CHANGE_OUT_OF_SCOPE",
                "START_IS_MILESTONE": "@Resources.GanttLanguage.START_IS_MILESTONE",
                "END_IS_MILESTONE": "@Resources.GanttLanguage.END_IS_MILESTONE",
                "TASK_HAS_CONSTRAINTS": "@Resources.GanttLanguage.TASK_HAS_CONSTRAINTS",
                "GANTT_ERROR_DEPENDS_ON_OPEN_TASK": "@Resources.GanttLanguage.GANTT_ERROR_DEPENDS_ON_OPEN_TASK",
                "GANTT_ERROR_DESCENDANT_OF_CLOSED_TASK": "@Resources.GanttLanguage.GANTT_ERROR_DESCENDANT_OF_CLOSED_TASK",
                "TASK_HAS_EXTERNAL_DEPS": "@Resources.GanttLanguage.TASK_HAS_EXTERNAL_DEPS",
                "GANNT_ERROR_LOADING_DATA_TASK_REMOVED": "@Resources.GanttLanguage.GANNT_ERROR_LOADING_DATA_TASK_REMOVED",
                "CIRCULAR_REFERENCE": "@Resources.GanttLanguage.CIRCULAR_REFERENCE",
                "CANNOT_DEPENDS_ON_ANCESTORS": "@Resources.GanttLanguage.CANNOT_DEPENDS_ON_ANCESTORS",
                "INVALID_DATE_FORMAT": "@Resources.GanttLanguage.INVALID_DATE_FORMAT",
                "GANTT_ERROR_LOADING_DATA_TASK_REMOVED": "@Resources.GanttLanguage.GANTT_ERROR_LOADING_DATA_TASK_REMOVED",
                "CANNOT_CLOSE_TASK_IF_OPEN_ISSUE": "@Resources.GanttLanguage.CANNOT_CLOSE_TASK_IF_OPEN_ISSUE",
                "TASK_MOVE_INCONSISTENT_LEVEL": "@Resources.GanttLanguage.TASK_MOVE_INCONSISTENT_LEVEL",
                "CANNOT_MOVE_TASK": "@Resources.GanttLanguage.CANNOT_MOVE_TASK",
                "PLEASE_SAVE_PROJECT": "@Resources.GanttLanguage.PLEASE_SAVE_PROJECT",
                "GANTT_SEMESTER": "@Resources.GanttLanguage.GANTT_SEMESTER",
                "GANTT_SEMESTER_SHORT": "@Resources.GanttLanguage.GANTT_SEMESTER_SHORT",
                "GANTT_QUARTER": "@Resources.GanttLanguage.GANTT_QUARTER",
                "GANTT_QUARTER_SHORT": "@Resources.GanttLanguage.GANTT_QUARTER_SHORT",
                "GANTT_WEEK": "@Resources.GanttLanguage.GANTT_WEEK",
                "GANTT_WEEK_SHORT": "@Resources.GanttLanguage.GANTT_WEEK_SHORT"
        };
        }



        function createNewResource(el) {
            var row = el.closest("tr[taskid]");
            var name = row.find("[name=resourceId_txt]").val();
            var url = contextPath + "/applications/teamwork/resource/resourceNew.jsp?CM=ADD&name=" + encodeURI(name);

            openBlackPopup(url, 700, 320, function (response) {
                //fillare lo smart combo
                if (response && response.resId && response.resName) {
                    //fillare lo smart combo e chiudere l'editor
                    row.find("[name=resourceId]").val(response.resId);
                    row.find("[name=resourceId_txt]").val(response.resName).focus().blur();
                }

            });
        }

        //getDemoProject();
        //getGanttData();

        // PROVA: prendo l'oggetto Model.Data ricevuto dal controller (GanttController) e lo trasformo in json
        //console.log("------******------");
        //console.log(Html.Raw(Json.Encode(Model)));
        //console.log("------******------");
    </script>






</body>
</html>
